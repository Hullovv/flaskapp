---
# Source: test/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-flask-secrets
type: Opaque
stringData:
  MYSQL_PASSWORD: Zmxhc2s=
  MYTEST: dGVzdA==
---
# Source: test/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: release-name-mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi 
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain 
  hostPath:
    path: /mnt/data
---
# Source: test/templates/persistentclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# Source: test/templates/flask-balancer.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-flask
spec:
  ports:
  - port: map[name:flask port:80 selector:map[app:flask] targetport:8080]
    protocol: TCP
    targetPort: map[name:flask port:80 selector:map[app:flask] targetport:8080]
  selector:
    app: map[name:flask port:80 selector:map[app:flask] targetport:8080]
  type: map[name:flask port:80 selector:map[app:flask] targetport:8080]
---
# Source: test/templates/mysql-balancer.yaml
apiVersion: v1
kind: Service
metadata:
  name: mysql  
  labels:
    app: mysql  
spec:
  ports:
  - port: 3306
    protocol: TCP
    name: mysql  
  selector:
    app: mysql  
  type: LoadBalancer
---
# Source: test/templates/flaskapp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-flak-deploy
  labels:
    app: map[test:1]
spec:
  replicas: map[test:1]
  selector:
    matchLabels:
      app: map[test:1]
  template:
    metadata:
      labels:
        app: map[test:1]
    spec:
      containers:
        - image: map[test:1]
          name: map[test:1]
          command: ["python3"]
          args: ["app.py", "runserver", "--host", "0.0.0.0", "-d", "-r"]
          ports:
            - containerPort: map[test:1]
          envFrom:
          - secretRef:
            name: map[data:map[MYSQL_PASSWORD:flask MYTEST:test]]
---
# Source: test/templates/mysql-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mysql-deploy
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: jamielsharief/mysql:latest 
        name: mysql      
        ports:
        - containerPort: 3306
        envFrom:
        - secretRef:
          name: 
        volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql 
      
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
